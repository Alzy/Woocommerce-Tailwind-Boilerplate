// Wysiwyg component class with sub-classes â€” designed for styling WordPress' the_content() output.
//
// For convenience, this is broken down into sensible parts but you can apply all styles here
// using the `Wysiwyg` aggregate class.
//
// The main point of this is to keep these out of the global base styles in order to leverage the
// full power of TailwindCSS in areas of the site that are not dynamically generated markup.

$module: '.Wysiwyg';
#{$module} {
  @extend .WysiwygAnchors;
  @extend .WysiwygHeadings;
  @extend .WysiwygCode;
  @extend .WysiwygSpacing;
  @extend .WysiwygLists;
}

$module: '.WysiwygAnchors';
#{$module} {
  a {
    &, &:visited {
      //@apply text-link;
      transition: all 0.24s ease;

      &:hover,
      &:focus {
        //@apply text-link-hover;
      }

      &:active {
      }

      // If an anchor exists inside a heading, inherit the headings color
      $this: &;
      @at-root h1, h2, h3, h4, h5, h6 {
        #{$this} {
          color: inherit;
        }
      }
    }
  }
}

$module: '.WysiwygHeadings';
#{$module} {
  h1, h2, h3, h4, h5, h6 {
    //@apply font-sans font-semibold text-black leading-tight;
  }

  h1 {
    //@apply text-2xl;
  }

  h2 {
    //@apply text-xl;
  }

  h3, h4, h5 {
    //@apply text-lg;
  }
}

$module: '.WysiwygCode';
#{$module} {
  code {
    //@apply font-mono inline-block px-1 rounded-sm text-sm align-baseline bg-pink-100 text-pink-600;
  }
}

$module: '.WysiwygSpacing';
#{$module} {
  p, ul, ol, .wp-block-embed {
    //@apply my-8;
  }
}

$module: '.WysiwygLists';
#{$module} {
  ul, ol {
    //@apply ml-6 list-outside;
    @include first_last_marginless;
  }

  ul {
    //@apply list-disc;
  }

  ol {
    //@apply list-decimal;
  }

  li {
    //@apply my-3;
  }
}